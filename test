const fs = require('fs');
const path = require('path');
const yaml = require('yaml');

// Chargez et parsez le fichier YAML
const yamlFile = fs.readFileSync('path/to/your/file.yaml', 'utf8');
const parsedYaml = yaml.parse(yamlFile);

// Fonction pour lire les fichiers .md et identifier les catégories
const readMdFilesAndIdentifyCategories = (nav) => {
    const stack = [...nav]; // Utilisez une pile pour gérer les niveaux de profondeur

    while (stack.length > 0) {
        const item = stack.pop();

        if (typeof item === 'string') {
            // C'est un fichier .md
            if (item.endsWith('.md')) {
                const filePath = path.resolve(__dirname, item);
                if (fs.existsSync(filePath)) {
                    const content = fs.readFileSync(filePath, 'utf8');
                    console.log(`Content of ${item}:`);
                    console.log(content);
                } else {
                    console.log(`File not found: ${item}`);
                }
            }
        } else if (typeof item === 'object') {
            // C'est un objet avec des sous-éléments
            for (const [key, value] of Object.entries(item)) {
                if (typeof value === 'string') {
                    if (value.endsWith('.md')) {
                        stack.push(value);
                    } else {
                        console.log(`Category: ${key}`);
                    }
                } else if (Array.isArray(value)) {
                    console.log(`Category: ${key}`);
                    stack.push(...value.reverse()); // Inversez pour maintenir l'ordre de parcours
                } else if (typeof value === 'object') {
                    console.log(`Category: ${key}`);
                    stack.push(value);
                }
            }
        }
    }
};

// Parcourez le nav et lisez les fichiers .md
readMdFilesAndIdentifyCategories(parsedYaml.nav);
